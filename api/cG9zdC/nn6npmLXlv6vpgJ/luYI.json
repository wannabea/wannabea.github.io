{"title":"矩阵快速幂","date":"2019-05-22T15:01:05.000Z","link":"post/矩阵快速幂","tags":["数学","板子"],"categories":["ICPC"],"updated":"2019-05-22T15:35:29.736Z","content":"<p>矩阵快速幂啊…真是个好东西,fjut校赛题看到后心态爆炸..这板子题要是写不出不就被人拉下一题了…于是当机立断..现学2333..还好鼓捣很久之后把板子套上了…于是回来恶补矩阵快速幂,这记录一下.</p>\n<hr>\n<p>连矩阵都没接触过的菜鸡表示..我要先学习一下矩阵是个啥..:</p>\n<p>矩阵的加法和数乘都很简单百度便知,乘法才是我们矩阵快速幂需要了解的,这里介绍一下前置知识矩阵乘法.</p>\n<p><strong>矩阵乘法</strong></p>\n<p>两个矩阵可以相乘的矩阵需满足的条件左矩阵的列数必须要与右矩阵的行数相同简记,乘法过程就是左矩阵的行中每一个数字乘以右矩阵列中的每一个数,乘法过程如下</p>\n<div class=\"article-img\"><p><img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/a88a3a575025f8be866be951df7c18d614ebb14d\" alt=\"Alt text\" data-zoomable></p></div>\n<p>代码实现如下(结构体中的运算符重载):</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方形矩阵.</span></span><br><span class=\"line\">MAT <span class=\"keyword\">operator</span>*(MAT p) &#123;</span><br><span class=\"line\">        MAT res;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;M;i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;M;j++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;M;k++)</span><br><span class=\"line\">            res.a[i][j]=(res.a[i][j]+a[i][k]*p.a[k][j])%mod;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>第二个前置知识.广义快速幂.所谓广义快速幂,就是指快速幂的思想(二进制思想),将中心运算修改.即</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">MAT <span class=\"title\">qpow</span><span class=\"params\">(MAT a,ll b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    MAT res = <span class=\"comment\">//初始化;</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(b)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(b &amp; <span class=\"number\">1</span>) res = res * a ; <span class=\"comment\">//* 某种运算</span></span><br><span class=\"line\">        a = a  * a;                 </span><br><span class=\"line\">        b &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>若是需要乘法运算,就将其* 改为+即可,若是矩阵乘运算,就将*改为矩阵乘的函数,或重载 *.</p>\n<p><strong>矩阵快速幂</strong></p>\n<p>介绍了这么多后,矩阵快速幂就差不多结束了….emm..毕竟两个一套就行了…</p>\n<p>那么下面来说说矩阵快速幂的应用.</p>\n<p>矩阵快速幂最棒的应用就在于它可以<strong>加速递推</strong>,例如斐波拉契数列,或随便的递推式.在O(logn)的时间复杂度下完成递推.</p>\n","prev":{"title":"C++ 学习笔记(一)","link":"post/Cpp1"},"next":{"title":"Codeforces Round #561 (Div2)","link":"post/cf561"},"plink":"http://rainyblog.top/post/矩阵快速幂/","copyright":{"author":"Rainy","link":"<a href=\"http://rainyblog.top/post/矩阵快速幂/\" title=\"矩阵快速幂\">http://rainyblog.top/post/矩阵快速幂/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}