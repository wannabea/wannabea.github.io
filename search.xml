<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ÂêÑÁ±ªÊéíÂ∫è‰ª£Á†ÅÂèäÂ§çÊùÇÂ∫¶]]></title>
    <url>%2Fpost%2Fsort%2F</url>
    <content type="text"><![CDATA[‰∏ãÂçàÂ∞±Ë¶ÅËÄÉÊï∞ÊçÆÁªìÊûÑ‰∫ÜÂëÄÊúâÁÇπÊÖå‚Ä¶.ÊâÄ‰ª•ÁúãÁúãÊéíÂ∫èÊä±Êä±‰ΩõËÑö..‰∫éÊòØ‚Ä¶ÂÜô‰∫ÜÂ†ÜÊéíÂ∫èÂ∞±ÂÅú‰∏ç‰∏ãÊù•‰∫ÜÂë¢‚Ä¶ ÊâÄ‰ª•Â∞±Êää‰∏äËØæËÄÅÂ∏àËÆ≤ÁöÑÊéíÂ∫èÈÉΩÂÜô‰∫Ü‰∏ÄÈÅç..‰∫§È¢òÈÉΩËøá‰∫ÜÂèØÊòØÂ§çÊùÇÂ∫¶ÂèØËÉΩ‰ºöÊúâ‰∫õÂ∞èÈóÆÈ¢ò.. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116//-------------------------Â†ÜÊéíÂ∫è------------------------////Êó∂Èó¥Â§çÊùÇÂ∫¶ Âπ≥Âùá O(nlogn) ÊúÄÂùè O(nlogn)//Á©∫Èó¥Â§çÊùÇÂ∫¶ O(1)#include &lt;bits/stdc++.h&gt;using namespace std;int a[1000006],n;void PercDown(int a[],int i,int n) //O(logn)&#123; if(2 * i + 1 &gt;= n) return ; else if(2 * i + 2 &gt;= n)&#123; if(a[i * 2 + 1] &gt; a[i]) swap(a[i* 2 + 1] , a[i]); &#125; else&#123; int p = i * 2 + 1,q = i * 2 + 2; if(a[p] &gt; a[q]) swap(p,q); if(a[i] &lt; a[q])&#123; swap(a[q],a[i]); PercDown(a,q,n); &#125; &#125;&#125;//(i + 1) * 2 (+ 1) - 1 = 2 * i + 1 || 2 * i + 2;void HeapSort(int a[],int n)&#123; for(int i = n/2;i &gt;= 0;--i)&#123; //Âª∫Â†ÜÔºàÂ§ßÊ†πÂ†ÜÔºâ PercDown(a,i,n); &#125; for(int i = n-1;i &gt;= 0;--i)&#123; //Êõ¥Êñ∞Â§ßÊ†πÂ†Ü swap(a[0],a[i]); PercDown(a,0,i); &#125;&#125;//-------------------------Âø´ÈÄüÊéíÂ∫è------------------------////Êó∂Èó¥Â§çÊùÇÂ∫¶ Âπ≥Âùá O(nlogn) ÊúÄÂùè O(n^&#123;2&#125;)//Á©∫Èó¥Â§çÊùÇÂ∫¶ O(logn)#include &lt;bits/stdc++.h&gt;using namespace std;int a[1000006];void QuickSort(int a[],int l,int r) &#123; int i,j,p; p = a[l]; i = l,j = r; while(i &lt; j)&#123; while(i &lt; j &amp;&amp; a[j] &gt;= p)&#123; //ÂÖàÁßªÂä®Âè≥ÊåáÈíàÂØªÊâæÂ§ß‰∫éÂì®ÂÖµÁöÑÂÄº j--; &#125; if(i != j)&#123; a[i] = a[j]; &#125; else break; while(i &lt; j &amp;&amp; a[i] &lt;= p)&#123; //ÂêéÁßªÂä®Â∑¶ÊåáÈíàÂØªÊâæÂ∞è‰∫éÂì®ÂÖµÁöÑÂÄº i++; &#125; if(i != j)&#123; a[j] = a[i]; &#125; else break; &#125; a[j] = p; //ÊåáÈíàÁõ∏Á¢∞ÔºåÊåáÈíà‰ΩçÁΩÆÂ∞±ÊòØÂì®ÂÖµÁöÑÊúÄÁªà‰ΩçÁΩÆ if(l &lt; j) QuickSort(a,l,j); if(j+1 &lt; r)QuickSort(a,j+1,r);&#125;//-----------------------Áõ¥Êé•ÊèíÂÖ•ÊéíÂ∫è----------------------////Êó∂Èó¥Â§çÊùÇÂ∫¶ Âπ≥Âùá O(n^&#123;2&#125;) ÊúÄÂùè O(n^&#123;2&#125;)//Á©∫Èó¥Â§çÊùÇÂ∫¶ O(1)#include &lt;bits/stdc++.h&gt;using namespace std;int a[1000006];void InsertSort(int a[],int n)&#123; for(int i = 1;i &lt; n;++i)&#123; int p = a[i]; for(int j = i;j &gt;= 0;--j)&#123; if(a[j-1] &gt; p) a[j] = a[j-1]; else&#123; a[j] = p; break; &#125; &#125; &#125;&#125;//-------------------------Â∏åÂ∞îÊéíÂ∫è------------------------////Êó∂Èó¥Â§çÊùÇÂ∫¶ Âπ≥Âùá O(nlogn) ÊúÄÂùè O(n^&#123;2&#125;)//Á©∫Èó¥Â§çÊùÇÂ∫¶ O(1)#include &lt;bits/stdc++.h&gt;using namespace std;int a[1000006];void ShellSort(int a[],int n)&#123; for(int d = n/2;d &gt; 0;d/=2)&#123; //‰ª•n/2‰∏∫Â¢ûÈáèÂ∫èÂàó for(int p = d;p &lt; n;++p)&#123; int tmp = a[p]; int i = p; for(i = p;i &gt;= d &amp;&amp; a[i-d] &gt; tmp; i-=d) a[i] = a[i-d]; a[i] = tmp; &#125; &#125;&#125;]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ÊéíÂ∫è</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++ Â≠¶‰π†Á¨îËÆ∞(Âõõ)]]></title>
    <url>%2Fpost%2Fcpp4%2F</url>
    <content type="text"><![CDATA[ËøôÊ¨°ÁúãÁöÑ‰∏úË•øÊúâÁÇπÂ§ö..Âì¶‰∏ç..ÊòØÁúãÁöÑÊúâÁÇπÈöè‰æø..Áøª‰∏ÄÁøªÂ∞±ËøáÂéª‰∫Ü‚Ä¶ ÊÑüËßâÊúâÁÇπÂü∫Á°Ä..?(ÊÄï‰∏çÊòØËá™Â∑±Â§™Ëèú) ÊâÄ‰ª•Èöè‰æøËÆ∞‰∏Ä‰∏ãÂ•Ω‰∫Ü.. ÂëΩÂêçÁöÑÂº∫Âà∂Á±ªÂûãËΩ¨Êç¢123//Âº∫Âà∂Á±ªÂûãËΩ¨Êç¢ÁöÑÂΩ¢Âºècast-name&lt;type&gt;(expression); //type ‰∏∫ÁõÆÊ†áÁ±ªÂûãÔºåexpressionÊòØË¶ÅËΩ¨Êç¢ÁöÑÂÄº//cast-nameÂàô‰∏∫&#123;static_cast,dynamic_cast,const_cast,reinterpret_cast&#125;‰∏≠ÁöÑ‰∏ÄÁßç ‰∏ãÈù¢ËÆ∞ÂΩï‰∏Ä‰∏ãÂêÑ‰∏™cast-nameÁöÑÊÑè‰πâ static_cast ‰ªª‰ΩïÂÖ∑ÊúâÊòéÁ°ÆÊÑè‰πâÁöÑÁ±ªÂûãËΩ¨Êç¢ÔºåÂè™Ë¶Å‰∏çÂåÖÂê´Â∫ïÂ±ÇconstÔºåÈÉΩÂèØ‰ª•‰ΩøÁî®static_cast ÂèØ‰ª•Â∞ÜÂ§ßÁöÑÁÆóÊúØÁ±ªÂûãËΩ¨Êç¢‰∏∫Â∞èÁöÑÁÆóÊúØÁ±ªÂûãÔºåËÄå‰∏ç‰∫ßÁîüwarning ÂèØ‰ª•Áî®ÂÖ∂Â∞ÜÂ≠òÂú®voidÊåáÈíà‰∏≠ÁöÑÂÄºËΩ¨ÂåñÂá∫Êù•ÔºåÂç≥Ôºö 123double d = 10;void *p = &amp;d;double *dp = static_cast&lt;double*&gt; p; //Ë¶ÅÊ≥®ÊÑèÁöÑÊòØÈÅøÂÖçËΩ¨Êç¢ÂêéÊâÄÂæóÁ±ªÂûã‰∏éÊåáÈíàÁ±ªÂûã‰∏çÁ¨¶ÔºåÂê¶Âàô‰∫ßÁîüÊú™ÂÆö‰πâÂêéÊûú const_cast ÂØπ‰∫éÂ∏∏ÈáèÂØπË±°ËΩ¨Êç¢‰∏∫ÈùûÂ∏∏ÈáèÂØπË±°ÁöÑË°å‰∏∫ÔºåÂç≥ÂéªÊéâconstÊÄßË¥® const_cast‰ªÖËÉΩÂéªÊéâconstÊÄßË¥®Ôºå‰∏çËÉΩËΩ¨Êç¢Á±ªÂûã renterpret_cast ‰∏∫ËøêÁÆóÂØπË±°ÁöÑ‰ΩçÊ®°ÂºèÊèê‰æõËæÉ‰ΩéÂ±ÇÊ¨°ÁöÑÈáçÊñ∞Ëß£Èáä emm‚Ä¶ËØª‰∏çÊáÇ Â§ßÊ¶ÇÊÑèÊÄùÂ∞±ÊòØ..Èöè‰æøËΩ¨Êç¢‚Ä¶? Â∞±ÁÆóËΩ¨Êç¢ÂÆå‰∏çËÉΩÁî®‰πüÂèØ‰ª•ËΩ¨Êç¢‚Ä¶ÊâÄ‰ª•ËΩ¨Êç¢Êó∂‰∏ÄÂÆöË¶ÅÊòéÁ°ÆÂÖ∂Ê†πÊú¨Á±ªÂûãÔºåÂ∞±ÊòØÂÆÉÂÜÖÈÉ®Â≠òÁöÑÂà∞Â∫ïÊòØ‰ªÄ‰πàÁ±ªÂûãÔºåÊâÄ‰ª•ËØ¥‰ΩøÁî®ÂÆÉÊòØÈùûÂ∏∏Âç±Èô©ÁöÑ‚Ä¶Áé∞Âú®ÁöÑËèúÈ∏°Ê∞¥Âπ≥ËøòÊòØÂÖàÊääÂÆÉÊîæÂú®‰∏ÄËæπÂêß.. c++ËøêÁÆóÁ¨¶‰ºòÂÖàÁ∫ßÈ°∫Â∫èË°®ÁΩë‰∏äÊê¨‰∏™‰ºòÂÖàÁ∫ßË°®üòÅ ‰ºòÂÖàÁ∫ß ËøêÁÆóÁ¨¶ ÊèèËø∞ ÁªìÂêàÊÄß 1 :: ‰ΩúÁî®ÂüüËß£Êûê ‰ªéÂ∑¶Âà∞Âè≥ 2 a++ a-- ÂêéÁºÄËá™Â¢û‰∏éËá™Âáè *type*() *type*{} ÂáΩÊï∞È£éÊ†ºËΩ¨Âûã a() ÂáΩÊï∞Ë∞ÉÁî® a[] ‰∏ãÊ†á . -&gt; ÊàêÂëòËÆøÈóÆ 3 ++a --a ÂâçÁºÄËá™Â¢û‰∏éËá™Âáè ‰ªéÂè≥Âà∞Â∑¶ +a -a ‰∏ÄÂÖÉÂä†‰∏éÂáè ! ~ ÈÄªËæëÈùûÂíåÈÄê‰ΩçÈùû (*type*) C È£éÊ†ºËΩ¨Âûã *a Èó¥Êé•ÔºàËß£ÂºïÁî®Ôºâ &amp;a ÂèñÂùÄ sizeof ÂèñÂ§ßÂ∞è[Ê≥® 1] co_await await Ë°®ËææÂºè (C++20) new new[] Âä®ÊÄÅÂÜÖÂ≠òÂàÜÈÖç delete delete[] Âä®ÊÄÅÂÜÖÂ≠òÂàÜÈÖç 4 .* -&gt;* ÊàêÂëòÊåáÈíà ‰ªéÂ∑¶Âà∞Âè≥ 5 a*b a/b a%b ‰πòÊ≥ï„ÄÅÈô§Ê≥ï‰∏é‰ΩôÊï∞ 6 a+b a-b Âä†Ê≥ï‰∏éÂáèÊ≥ï 7 &lt;&lt; &gt;&gt; ÈÄê‰ΩçÂ∑¶Áßª‰∏éÂè≥Áßª 8 &lt;=&gt; ‰∏âË∑ØÊØîËæÉËøêÁÆóÁ¨¶(C++20 Ëµ∑) 9 &lt; &lt;= ÂàÜÂà´‰∏∫ &lt; ‰∏é ‚â§ ÁöÑÂÖ≥Á≥ªËøêÁÆóÁ¨¶ &gt; &gt;= ÂàÜÂà´‰∏∫ &gt; ‰∏é ‚â• ÁöÑÂÖ≥Á≥ªËøêÁÆóÁ¨¶ 10 == != ÂàÜÂà´‰∏∫ = ‰∏é ‚â† ÁöÑÂÖ≥Á≥ªËøêÁÆóÁ¨¶ 11 a&amp;b ÈÄê‰Ωç‰∏é 12 ^ ÈÄê‰ΩçÂºÇÊàñÔºà‰∫íÊñ•ÊàñÔºâ 13 ` ` ÈÄê‰ΩçÊàñÔºàÂèØÂÖºÊàñÔºâ 14 &amp;&amp; ÈÄªËæë‰∏é 15 ` ` 16 a?b:c ‰∏âÂÖÉÊù°‰ª∂[Ê≥® 2] ‰ªéÂè≥Âà∞Â∑¶ throw throw ËøêÁÆóÁ¨¶ co_yield yield Ë°®ËææÂºè (C++20) = Áõ¥Êé•ËµãÂÄºÔºàC++ Á±ªÈªòËÆ§Êèê‰æõÔºâ += -= ‰ª•ÂíåÂèäÂ∑ÆÂ§çÂêàËµãÂÄº *= /= %= ‰ª•ÁßØ„ÄÅÂïÜÂèä‰ΩôÊï∞Â§çÂêàËµãÂÄº &lt;&lt;= &gt;&gt;= ‰ª•ÈÄê‰ΩçÂ∑¶ÁßªÂèäÂè≥ÁßªÂ§çÂêàËµãÂÄº &amp;= ^= ` =` ‰ª•ÈÄê‰Ωç‰∏é„ÄÅÂºÇÊàñÂèäÊàñÂ§çÂêàËµãÂÄº 17 , ÈÄóÂè∑ ‰ªéÂ∑¶Âà∞Âè≥ Â±ÄÈÉ®ÂØπË±° Âú®c++‰∏≠ÔºåÂêçÂ≠óÊúâÂÖ∂‰ΩúÁî®ÂüüÔºåÂØπË±°ÊúâÁîüÂëΩÂë®Êúü Â±ÄÈÉ®ÈùôÊÄÅÂØπË±°ÔºàstaticÔºâÂ±ÄÈÉ®ÈùôÊÄÅÂØπË±°Âç≥Âú®Á®ãÂ∫èÁ¨¨‰∏ÄÊ¨°Ë∞ÉÁî®ÂáΩÊï∞Êó∂ÂØπÂÖ∂ÂàùÂßãÂåñÔºåÂπ∂Áõ¥Âà∞Á®ãÂ∫èÁªìÊùüÊâçË¢´ÈîÄÊØÅÔºå‰∏îÂáΩÊï∞ÁªìÊùüÂØπÂÖ∂‰∏ç‰∫ßÁîüÂΩ±Âìç 12345size_t const_calls()&#123; static size_t cnt = 0; return ++cnt;&#125; Â¶Ç‰∏äÂ∞±ÊòØ‰∏Ä‰∏™ÁªüËÆ°ÂáΩÊï∞Ë¢´Ë∞ÉÁî®Â§öÂ∞ëÊ¨°ÁöÑÂáΩÊï∞ÔºåÁî®Âà∞static ÈùôÊÄÅÂèòÈáè constÂΩ¢ÂèÇ‰∏éÂÆûÂèÇÂΩìÁî®ÂÆûÂèÇÂàùÂßãÂåñÂΩ¢ÂèÇÊó∂Ôºå‰ºöÂøΩÁï•ÊéâÈ°∂Â±Çconst ÂáΩÊï∞ÂèÇÊï∞ÂÆö‰πâÊó∂Â∫îÂ∞ΩÈáè‰ΩøÁî®Â∏∏ÈáèÂºïÁî®ÔºåÂç≥Ôºö func(const int &n)``` 1234567891011‰ΩøÁî®ÊôÆÈÄöÂºïÁî®ÊòØ‰∏ÄÁßçËæÉ‰∏∫Â∏∏ËßÅÁöÑÈîôËØØÔºö‰ª§‰ΩøÁî®ËÄÖËÆ§‰∏∫ÂèØ‰ª•ÊîπÂèòÂÖ∂ÂÆûÂèÇÁöÑÂÄºÔºåËÄå‰∏îÂ§ßÂ§ßÈôêÂà∂‰∫ÜÂèÇÊï∞ËåÉÂõ¥ÔºàÊó†Ê≥ï‰º†ÂÖ•Â∏∏ÈáèÔºâ**ÔºàÂΩìÁÑ∂Ëã•ÂáΩÊï∞‰ΩìÈúÄË¶ÅÊîπÂèòÂÖ∂ÂÆûÂèÇÁöÑÂÄºÔºåÂàôÂøÖÈ°ª‰ΩøÁî®ÊôÆÈÄöÂºïÁî®Ôºâ**#### Êï∞ÁªÑÂΩ¢ÂèÇÂèØ‰ª•Âà©Áî®ÂºïÁî®ÊòæÂºèÁöÑ‰º†ÈÄí‰∏Ä‰∏™Âõ∫ÂÆöÂ§ßÂ∞èÁöÑÊï∞ÁªÑÂΩ¢ÂèÇ```cppvoid func(int (&amp;arr)[10]); //‰º†ÈÄí‰∏Ä‰∏™Â§ßÂ∞è‰∏∫10ÁöÑintÊï∞ÁªÑ Áî±‰∫éc++‰∏≠Ê≤°ÊúâÁúüÊ≠£ÁöÑÂ§öÁª¥Êï∞ÁªÑÔºåÊâÄ‰ª•Â£∞Êòé‰∫åÁª¥Êï∞ÁªÑÊó∂ÔºåÂèØ‰ª•Â£∞Êòé‰∏∫ÊåáÂêëÊï∞ÁªÑÁöÑÊåáÈíà 12void func(int (*arr)[10]); //‰º†ÈÄí‰∏Ä‰∏™ÊåáÂêëÂ§ßÂ∞è‰∏∫10ÁöÑÊï∞ÁªÑÁöÑÊåáÈíàvoid func(int arr[][10]); //Á≠â‰ª∑ÂÆö‰πâ main()ÂáΩÊï∞ÁöÑ‰º†ÂèÇÊúâ‰∫õÊÉÖÂÜµ‰∏ãÊàë‰ª¨ÈúÄË¶ÅÁªômain‰º†ÂèÇËÄåmainÁöÑÂèÇÊï∞‰∏∫ 1main(int argc, char **argv); ‰º†ÂèÇÊñπÊ≥ïÔºöÂèØ‰ª•ÈÄöËøáËøêË°åÂèØÊâßË°åÊñá‰ª∂Êó∂Âú®ÂëΩ‰ª§Ë°åÂêéÊ∑ªÂä†Â≠óÁ¨¶‰∏≤ÂÆûÁé∞Ôºà‰º†ÂÖ•ÂèÇÊï∞‰∏∫argvÔºåËÄåargc‰∏∫argv‰∏≠Â≠óÁ¨¶‰∏≤ÁöÑ‰∏™Êï∞Ôºâ 12$ g++ a.cpp -o a$ ./a a b c d initializer_listÁ±ªÂûãÂΩìÂáΩÊï∞ÂÆûÂèÇÊï∞ÈáèÊú™Áü•Ôºå‰ΩÜÁ±ªÂûãÁõ∏ÂêåÔºåÂèØ‰ΩøÁî®initializerÊù•‰º†ÂèÇÔºå‰ΩÜ‰º†ÂèÇÈúÄË¶ÅÂä†‰∏ä{} initializer_list‰∏éÂÖ∂‰ªñÂÆπÂô®‰∏çÂêåÁöÑÊòØÔºåÂÆÉÂÜÖÈÉ®ÂÖÉÁ¥†Ê∞∏ËøúÊòØÂ∏∏ÈáèÂÄºÔºå‰∏çËÉΩË¢´ÊîπÂèò„ÄÇ 1234567//Ê†áÂáÜÂ∫ìÊèê‰æõÁöÑÊìç‰Ωúinitializer_list&lt;T&gt; lst;initializer_list&lt;T&gt; lst&#123;a,b,c...&#125;;lst2(lst);lst.size();lst.begin();lst.end(); //Âç≥ÂèØ‰ª•‰ΩøÁî®ËåÉÂõ¥forÂæ™ÁéØ ÂáΩÊï∞ËøîÂõûÊï∞ÁªÑÊåáÈíàÊñπÊ≥ïËøîÂõûÊï∞ÁªÑÊåáÈíàÁöÑÂáΩÊï∞ÂΩ¢ÂºèÂ¶Ç‰∏ãÔºö 12Type (*func(para_list)) [dimension]; //dimension‰∏∫Êï∞ÁªÑÂ§ßÂ∞èint (*func(int i))[10]; //ËøîÂõûÊåáÂêëÂ§ßÂ∞è‰∏∫10ÁöÑintÁ±ªÂûãÊï∞ÁªÑÊåáÈíà ‰πüÂèØ‰ª•‰ΩøÁî®Â∞æÁΩÆËøîÂõûÁ±ªÂûã 1auto func(int i) -&gt; int(*)[10]; ÊàñËÄÖ‰ΩøÁî®decltype(): 12int arr[10];decltype(arr) *func(int i);]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++ Â≠¶‰π†Á¨îËÆ∞(‰∏â)]]></title>
    <url>%2Fpost%2Fcpp3%2F</url>
    <content type="text"><![CDATA[ËÄÉËØïÂë®Áªà‰∫éËøáÂéª‰∫Üüò≠ÁÑ∂ÂêéÁé∞Âú®ÊáíÊï£ÁöÑ‰∏ÄÁÇπ‰∏çÊÑøÊÑèÂ≠¶‰π†ÂèØÂíãÊï¥.. Âà∑È¢òÁöÑÁä∂ÊÄÅËøòÊúâÂæÖÊÅ¢Â§çÔºåÂÖàÂ≠¶Â≠¶C++Âêß ËåÉÂõ¥forËØ≠Âè•12for (declaration : expression) statement expresstionÊòØ‰∏Ä‰∏™ÂØπË±°ÔºåË°®Á§∫‰∏Ä‰∏™Â∫èÂàó declarationË¥üË¥£ÂÆö‰πâ‰∏Ä‰∏™ÂèòÈáèÔºåÁî®‰∫éËÆøÈóÆÂ∫èÂàó‰∏≠ÁöÑÂü∫Êú¨ÂÖÉÁ¥† cctypeÂ§¥Êñá‰ª∂ÂáΩÊï∞123456789isalnum(c) // cÊòØÂ≠óÊØçÊàñËÄÖÊï∞ÁªÑÊó∂‰∏∫Áúüisalpha(c) //cÊòØÂ≠óÊØçiscntrl(c) //cÊòØÊéßÂà∂Â≠óÁ¨¶isxdigit(c) //cÊòØ16ËøõÂà∂Êï∞Â≠óisdigit(c) //cÊòØÊï∞Â≠óisspace(c) //cÊòØÁ©∫ÁôΩÔºàÁ©∫Ê†ºÔºåÂà∂Ë°®Á¨¶ÔºåÂõûËΩ¶Á¨¶ÔºåÊç¢Ë°åÁ¨¶ÔºåËøõÁ∫∏Á¨¶(\f,\x0c,\cL )Ôºâisgraph(c) //c‰∏çÊòØÁ©∫Ê†º‰ΩÜÂèØ‰ª•ÊâìÂç∞isupper(c)islower(c) Êï∞ÁªÑ‰ΩøÁî®Êï∞ÁªÑ‰∏ãÊ†áÊó∂ÔºåÈÄöÂ∏∏‰ΩøÁî®size_tÁ±ªÂûãÔºåÂç≥‰∏éÊú∫Âô®Áõ∏ÂÖ≥Ë∂≥Â§üÂ§ßÁöÑÊó†Á¨¶Âè∑Êï¥ÂΩ¢ÔºåÂ≠òÂú®‰∏≠ ÊåáÈíà‰πüÊòØËø≠‰ª£Âô® 1234567‰æãÂ¶ÇÔºöint a[10]; //ÂÆö‰πâÊï∞ÁªÑ int *s = &amp;a[0]; //ÂÆö‰πâÂ§¥ÊåáÈíàint *t = &amp;a[10]; //ÂÆö‰πâÂ∞æÂêéÊåáÈíà//Áî±‰∫éÊ≠§Áî®Ê≥ïÊûÅÊòìÂá∫ÈîôÔºåc++11Â¢ûÂä†Ê†áÂáÜÂ∫ìÂáΩÊï∞ begin(),end()int *beg = begin(a);int *last = end(a); string ÁöÑÂàùÂßãÂåñstringÂÖÅËÆ∏‰ΩøÁî®Á©∫Â≠óÁ¨¶ÁªìÊùüÁöÑÂ≠óÁ¨¶Êï∞ÁªÑÊù•ÂàùÂßãÂåñstringÂØπË±° 1string s("hello world"); string ‰∏ìÈó®Êèê‰æõ‰∫Ü‰∏Ä‰∏™Âêç‰∏∫c_strÁöÑÊàêÂëòÂáΩÊï∞ÔºåÂç≥ËøîÂõûcÈ£éÊ†ºÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÂç≥‰ª•Á©∫Â≠óÁ¨¶ÁªìÊùüÁöÑÂ≠óÁ¨¶Êï∞ÁªÑÁöÑÊåáÈíà 1const char *str = s.c_str(); //Â∞ÜstringËΩ¨Âåñ‰∏∫Â≠óÁ¨¶Êï∞ÁªÑÁöÑÊåáÈíàÁ±ªÂûã vectorÁöÑÊï∞ÁªÑÂàùÂßãÂåñÊñπÊ≥ï123int int_arr[] = &#123;1,2,3,4,5,6&#125;;vector&lt;int&gt; ivec(begin(int_arr),end(int_arr)); //‰ΩøÁî®Êï∞ÁªÑÈ¶ñÊåáÈíà‰∏éÂ∞æÂêéÊåáÈíàÂàùÂßãÂåñvector&lt;int&gt; subVec(int_arr+1,int_arr+4);]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hdu3836]]></title>
    <url>%2Fpost%2Fhdu3836%2F</url>
    <content type="text"><![CDATA[È¢òÁõÆÈìæÊé•:http://acm.hdu.edu.cn/showproblem.php?pid=3836 tarjanÂº∫ËøûÈÄöÂàÜÈáèÁº©ÁÇπÂÖ•Èó®È¢ò. ÊúÄËøëÊÉ≥Êêû‰∏ÄÊêûÂõæËÆ∫Âêß..‰ΩÜÊòØÂèàËèúÁöÑ‰∏ÄÊâπ,ÁΩëÁªúÊµÅÂèàÊêû‰∏çÂä®,Â∞±Âè™ËÉΩÁé©Áé©ÊúÄÁü≠Ë∑Ø,Âº∫ËøûÈÄöÂàÜÈáèÁöÑÊ∞¥È¢òËøôÊ†∑Â≠ê.Â∞±Ëøô‰πà‰∏ÄÈÅìÊ∞¥È¢òÊï∞ÁªÑÂºÄÂ∞è‰∫Ü‰∏çRE,TLEÊòØÊÄé‰πàÂõû‰∫ã‚Ä¶ÂÆ≥ÂæóÊàëdebugÂçäÂ∞èÊó∂ÂøÉÊÄÅÁàÜÁÇ∏. È¢òÊÑèËØÅÊòé‰∏§ÈõÜÂêàÁ≠â‰ª∑ÈúÄË¶ÅËØÅÊòéAÊòØBÂ≠êÈõÜÂíåBÊòØAÂ≠êÈõÜ,‰∏îÊÄßË¥®ÂèØ‰ª•‰º†ÈÄí,Áé∞Âú®Êúân‰∏™Â≠êÈõÜ,m‰∏™Â∑≤Áü•ËØÅÊòé,Ê±ÇÊúÄÂ∞ëËøòÈúÄÂ§öÂ∞ëÊ¨°ËØÅÊòéÂæóÂà∞ÊâÄÊúâÈõÜÂêàÂùáÁ≠â‰ª∑. È¢òËß£tarjanÊ±ÇÂº∫ËøûÈÄöÂàÜÈáèÁº©ÁÇπ,Â°´Ëæπ‰Ωø‰Ωô‰∏ãÁöÑÂº∫ËøûÈÄöÁÇπÊûÑÊàê‰∏Ä‰∏™Âº∫ËøûÈÄöÂõæÂç≥ÂèØ. ÂÖ∑‰ΩìÊù•ËØ¥Â∞±ÊòØÂ∞ÜÊØè‰∏™ÈõÜÂêàÁúã‰∏∫‰∏Ä‰∏™ÂúÜÁÇπÂÖ±n‰∏™,tarjanÁº©‰∏∫cnt‰∏™ÊñπÁÇπ.Ê±ÇÊâÄÊúâÊñπÁÇπ‰∏≠ÂÖ•Â∫¶‰∏∫0ÁÇπËÆ∞a‰∏™,Âá∫Â∫¶‰∏∫0ÁÇπb‰∏™.ÈúÄË¶ÅÊ∑ªÂä†ÁöÑËæπÂ∞±ÊòØmax(a,b)‰∏™. ‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101// Problem : 3836 ( Equivalent Sets ) Judge Status : Accepted// RunId : 29352864 Language : G++ Author : nicknameuser// Code Render Status : Rendered By HDOJ G++ Code Render Version 0.01 Beta#include &lt;bits/stdc++.h&gt;using namespace std;#define mem(a,b) memset(a,b,sizeof(a))const int MAXN = 20000 + 10;struct Edge&#123; int to,next;&#125;edge[MAXN * 3];int Stack[MAXN],head[MAXN],dfn[MAXN],low[MAXN],Belong[MAXN];bool InStack[MAXN],in[MAXN],out[MAXN];int tim,tot,cnt,top;int n,m;void init() //ÂàùÂßãÂåñ&#123; mem(Stack,0); mem(head,-1); mem(dfn,0); mem(low,0); mem(Belong,0); mem(in,0); mem(out,0); tim = tot = cnt = top = 0;&#125;void tarjan(int u) //Áº©ÁÇπÂÖ•Belong&#123; int v; dfn[u] = low[u] = ++tim; Stack[top++] = u; InStack[u] = 1; for(int i = head[u];i != -1 ;i = edge[i].next)&#123; v = edge[i].to; if(!dfn[v])&#123; tarjan(v); low[u] = min(low[u],low[v]); &#125; else if(InStack[v]) low[u] = min(low[u],dfn[v]); &#125; if(dfn[u] == low[u])&#123; cnt++; do&#123; v = Stack[--top]; InStack[v] = 0; Belong[v] = cnt; &#125;while(u != v); &#125;&#125;void addedge(int u,int v) //Âä†ËæπÂáΩÊï∞&#123; edge[tot].to = v; edge[tot].next = head[u]; head[u] = tot++;&#125;int main()&#123; while(cin&gt;&gt;n&gt;&gt;m)&#123; init(); while(m--)&#123; int u,v; scanf("%d%d",&amp;u,&amp;v); addedge(u,v); &#125; for(int i = 1 ;i &lt;= n;++i)&#123; if(!dfn[i]) tarjan(i); &#125; for (int i = 1; i &lt;= n; ++i)&#123; //ÂÖ•Â∫¶Âá∫Â∫¶‰∏∫Èõ∂ÁÇπÁöÑ‰∏™Êï∞ for (int j = head[i]; j != -1; j = edge[j].next)&#123; int v=edge[j].to; if (Belong[v] != Belong[i])&#123; out[Belong[i]] = 1; in[Belong[v]] = 1; &#125; &#125; &#125; if(cnt == 1)&#123; //Âõæ‰∏∫Âº∫ËøûÈÄöÂõæÊó∂,Êó†ÈúÄÂä†Ëæπ puts("0"); continue; &#125; int a,b; a = b = 0; for(int i = 1;i &lt;= cnt;++i)&#123; if(!in[i]) a++; if(!out[i]) b++; &#125; printf("%d\n",max(a,b)); &#125; return 0;&#125; ÊúÄËøëÊ≤°ÂøÉÊÉÖÂÜôÂçöÂÆ¢‰∫Ü‚Ä¶ÊØïÁ´üÂ≠¶ÊúüÊú´ÂÆûÂú®Â§™ÊÅêÊÄñ‰∫Ü,Â§ßÈõæ,È´òÊï∞,È´òÂê¨,‰∏âÈó®ËØæÊ≠£Âú®ÊïôÊàëÂÅö‰∫∫,ÊäΩÁÇπÊó∂Èó¥ÂÅö‰∏§ÈÅìÈ¢ò,Á≠âÂÖ®ÈÉΩËÄÉÂÆåÊääÊùøÂ≠êÊÄªÁªìÊåÇ‰∏äÂêß‚Ä¶]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ICPC</tag>
        <tag>È¢òËß£</tag>
        <tag>ÂõæËÆ∫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++ Â≠¶‰π†Á¨îËÆ∞(‰∫å)]]></title>
    <url>%2Fpost%2Fcpp2%2F</url>
    <content type="text"><![CDATA[decltype Á±ªÂûãÂà∂ÂÆöÁ¨¶Áî®Â§Ñ: ÂΩìÊàë‰ª¨‰∏çÁü•ÈÅìÊüê‰∏™ÂèòÈáèÁöÑÁ±ªÂûãËÄåÈúÄË¶Å‰ªéË°®ËææÂºèÊé®Êñ≠Ë¶ÅÂÆö‰πâÁöÑÁ±ªÂûãÊó∂,ÂèØ‰ª•‰ΩøÁî®C++11ÁöÑÁ¨¨‰∫åÁßçÁ±ªÂûãËØ¥ÊòéÁ¨¶.,ÂÆÉÁöÑÂÆûÈôÖ‰ΩúÁî®Â∞±ÊòØËøîÂõûÊìç‰ΩúÊï∞ÁöÑÊï∞ÊçÆÁ±ªÂûã.Âú®Ê≠§ËøáÁ®ã‰∏≠,ÁºñËØëÂô®ÂàÜÊûêË°®ËææÂºèÂπ∂ÂæóÂà∞ÂÖ∂Á±ªÂûã,‰ΩÜÂÆûÈôÖËøêÁÆóË°®ËææÂºèÁöÑÂÄº 123const int ci = 0,&amp;cj = ci;decltype(ci) x = 0; //x ÁöÑÊï∞ÊçÆÁ±ªÂûãÊòØ const intdecltype(cj) y = x; //y ÁöÑÊï∞ÊçÆÁ±ªÂûãÊòØ const int&amp; ÂøÖÈ°ªÂØπÂÖ∂ËøõË°åÂàùÂßãÂåñ,Âê¶ÂàôÁºñËØëÂô®‰ºöÊä•Èîô decltype‰∏éÂºïÁî® ÂΩìdecltypeÂæóÂà∞ÁöÑÊï∞ÊçÆÁ±ªÂûãÊòØ‰∏Ä‰∏™ÂºïÁî®ÂÄº,ÈÇ£‰πàÂÆÉÂè™ËÉΩ‰Ωú‰∏∫ËµãÂÄºËØ≠Âè•ÁöÑÂ∑¶ÂÄºÂá∫Áé∞,Âç≥ÂøÖÈ°ªÂàùÂßãÂåñ. ÁâπÊÄß: ‰∏éautoÁõ∏ÊØî,ÂΩìdecltypeÁöÑË°®ËææÂºèÂä†ÂèåÈáçÊã¨Âè∑‰ª£Ë°®ÂÖ∂ÂºïÁî®ÂÄº. 12int i = 42;decltyp((i)) j = i; //jÁöÑÁ±ªÂûãÊòØ int&amp; ÂøÖÈ°ªÂØπÂÖ∂ÂàùÂßãÂåñ]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++ Â≠¶‰π†Á¨îËÆ∞(‰∏Ä)]]></title>
    <url>%2Fpost%2Fcpp1%2F</url>
    <content type="text"><![CDATA[[TOC] ÂèòÈáèÁöÑÂ£∞Êòé‰∏éÂÆö‰πâÂ£∞ÊòéÂÖ≥ÈîÆÂ≠ó extern 123extern int a; //Â£∞Êòéint a; //Â£∞ÊòéÂπ∂ÂÆö‰πâextern int a = 1; //ÂÆö‰πâ ÂèòÈáèÂèØ‰ª•Ë¢´Â§öÊ¨°Â£∞Êòé,‰ªÖÂèØÂÆö‰πâ‰∏ÄÊ¨° Ëã•ÊÉ≥Âú®Â§ö‰∏™Êñá‰ª∂‰∏≠ÂêåÊó∂Â∫îÁî®const ÂØπË±°,ÈúÄË¶ÅÂú®constÂâçÂä†extern 1extren const int a = 100; const ÈôêÂÆöÁ¨¶ÂØπconst ÁöÑÂºïÁî®(ÁÆÄÁß∞Â∏∏ÈáèÂºïÁî®)‰æã: 1234int i = 42; const int &amp;r1 = i; const int &amp;r2 = 42; const int &amp;r3 = r1 * 2; Â∏∏ÈáèÂºïÁî®ÂèØ‰ª•ÂØπÈùûÂ∏∏ÈáèÊâßË°å,‰ΩÜÊòØÊó†Ê≥ï‰øÆÊîπÂºïÁî®ÂÄº,‰πü‰∏çËÉΩÈÄöËøáÂºïÁî®ÂÄº‰øÆÊîπÂ∏∏Èáè. ÊåáÂêëÂ∏∏ÈáèÁöÑÊåáÈíàconst ÂèØ‰ª•‰ª§ÊåáÈíàÊåáÂêëÂ∏∏ÈáèÊàñÈùûÂ∏∏Èáè. ‰∏çËøáÊåáÈíà‰∏çËÉΩ‰øÆÊîπÊâÄÊåáÂØπË±°ÁöÑÂÄº. 123456789 const double pi = 3.14; const double *cptr = &amp;pi; printf("%.2lf\n",*cptr); double dval = 3.16; cptr = &amp;dval; printf("%.2lf\n",*cptr);output:3.143.16 ÊâÄË∞ìÊåáÂêëÂ∏∏ÈáèÁöÑÊåáÈíà,‰ªÖ‰ªÖÊòØÊåá‰∏çËÉΩÈÄöËøáËØ•ÊåáÈíàÊîπÂèòÂ∏∏ÈáèÁöÑÂÄº,‰ΩÜÊòØÂèØ‰ª•ÈÄöËøáÂÖ∂‰ªñÊñπÂºèÊîπÂèò constÊåáÈíàÂç≥ÊåáÈíàÊòØÂØπË±°,ÊääÊåáÈíàÊú¨Ë∫´ÂÆö‰ΩçÂ∏∏Èáè Âç≥ÊåáÈíàÊú¨Ë∫´ÊåáÂêë‰∏çÂèØÊõ¥Êîπ,‰ΩÜÂèØÈÄöËøáÂÖ∂ÊîπÂèòÂÖ∂ÊåáÂêëÁöÑÈùûÂ∏∏ÈáèÁöÑÂÄº 1234int a = 0;int *const pa = &amp;a; //Â∏∏ÈáèÊåáÈíàconst double pi = 3.14;const double *const ppi = &amp;pi //ÊåáÂêëÂ∏∏ÈáèÁöÑÂ∏∏ÈáèÊåáÈíà È°∂Â±Çconst È°∂Â±ÇconstË°®Á§∫ÊåáÈíàÊú¨Ë∫´ÊòØ‰∏™Â∏∏Èáè, ËÄåÂ∫ïÂ±ÇconstË°®Á§∫ÊåáÈíàÊâÄÊåáÂØπË±°ÊòØ‰∏™Â∏∏Èáè. 12345ÁõÆÂâçÊâÄËßÅÊúâint *const p = &amp;i; //È°∂Â±Çconstconst double pi = 3.14; //È°∂Â±Çconstconst double *ppi = &amp;pi;//Â∫ïÂ±Çconstconst int &amp;r = i; //Áî®‰∫éÂ£∞ÊòéÂºïÁî®ÁöÑconstÂùá‰∏∫Â∫ïÂ±Çconst ÂàÜÂà´constÊòØÂ∫ïÂ±ÇÊàñÈ°∂Â±ÇÊó∂,ÊåâÂÆö‰πâÂå∫ÂàÜÂç≥ÂèØ. Âú®Â∫ïÂ±ÇconstÂØπË±°ÁöÑÊã∑Ë¥ù‰∏≠,Êã∑ÂÖ•‰∏éÊã∑Âá∫ÂøÖÈ°ªÊã•ÊúâÁõ∏ÂêåÁöÑÂ∫ïÂ±ÇconstËµÑÊ†º,Êàñ‰∏§ËÄÖ‰∏§ËÄÖÁ±ªÂûãÂèØ‰ª•ËøõË°åËΩ¨Êç¢. Â∏∏ÈáèË°®ËææÂºèÂç≥ÂÄº‰∏ç‰ºöÊîπÂèò,‰∏îÂÄºÂú®ÁºñËØëËøáÁ®ã‰∏≠Â∞±ÂèØÂæóÂà∞ 123456‰æãÂ¶Ç const int mx = 100;const int mxx = mx + 10;ËÄåÂ¶Ç‰∏ãË°®ËææÂºèÂ∞±‰∏çÊòØconst int x = get_size(); //ÁºñËØëËøáÁ®ãÊó†Ê≥ïÂæóÂà∞ÂÖ∂ÂÄº,È°ªËøêË°åÊó∂Á°ÆÂÆöint y = 10; //ÂÄº‰∏çÁ°ÆÂÆö constexprÈôêÂÆöÁ¨¶Â∞ÜÂèòÈáèÂ£∞Êòé‰∏∫constexprÁ±ªÂûã,ÂèØÁî±ÁºñËØëÂô®Êù•È™åËØÅÂèòÈáèÁöÑÂÄºÊòØÂê¶ÊòØ‰∏™Â∏∏ÈáèË°®ËææÂºè. ‰∏îÂèØÁî®‰∫éÂ£∞ÊòéÂáΩÊï∞,‰ΩÜÊ≠§Á±ªÂáΩÊï∞È°ªË∂≥Â§üÁÆÄÂçï,ËÉΩËÆ©ÁºñËØëÂô®ÁºñËØëÂêéÂç≥ÂèØÂæóÂà∞ÁªìÊûú.ËøôÊ†∑ÁöÑÂáΩÊï∞,Â∞±ÂèØ‰ª•ÂéªÂàùÂßãÂåñconstexprÂèòÈáè 123constexpr int mf = 20;constexpr int limit = mf + 1;constexpr int sz = size(); //size() ‰∏∫constexprÂáΩÊï∞ constexpr ÂÆö‰πâÁöÑÊåáÈíàÂíåÂºïÁî®ÂàùÂßãÂÄºÂèóÂà∞‰∏•Ê†ºÈôêÂà∂. Âç≥ÂÆö‰πâÂú®‰ªª‰ΩïÂáΩÊï∞‰∏≠ÁöÑÂèòÈáèÂùá‰∏çÂèØË¢´constexpr‰øÆÈ•∞,Âõ†‰∏∫ÂáΩÊï∞‰ΩìÂÜÖÁöÑÂèòÈáèÂÆö‰πâ‰∏ÄËà¨Âπ∂‰∏ç‰ºöÂ≠òÊîæÂú®Âõ∫ÂÆöÂú∞ÂùÄ. Ê≥®ÊÑè: Ëã•constexprÂÆö‰πâ‰∏≠Â≠òÂú®ÊåáÈíà,ÂàôÊ≠§ÊåáÈíà‰∏∫Â∏∏ÈáèÊåáÈíà,Âç≥‰∏éÂÖ∂ÊåáÂêëÁöÑÂØπË±°Êó†ÂÖ≥. 12const int *p = &amp;i; //ÊåáÂêëÂ∏∏ÈáèÁöÑÊåáÈíàconstexpr int *q = &amp;j; //Â∏∏ÈáèÊåáÈíà]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Áü©ÈòµÂø´ÈÄüÂπÇ]]></title>
    <url>%2Fpost%2F%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82%2F</url>
    <content type="text"><![CDATA[Áü©ÈòµÂø´ÈÄüÂπÇÂïä‚Ä¶ÁúüÊòØ‰∏™Â•Ω‰∏úË•ø,fjutÊ†°ËµõÈ¢òÁúãÂà∞ÂêéÂøÉÊÄÅÁàÜÁÇ∏..ËøôÊùøÂ≠êÈ¢òË¶ÅÊòØÂÜô‰∏çÂá∫‰∏çÂ∞±Ë¢´‰∫∫Êãâ‰∏ã‰∏ÄÈ¢ò‰∫Ü‚Ä¶‰∫éÊòØÂΩìÊú∫Á´ãÊñ≠..Áé∞Â≠¶2333..ËøòÂ•ΩÈºìÊç£Âæà‰πÖ‰πãÂêéÊääÊùøÂ≠êÂ•ó‰∏ä‰∫Ü‚Ä¶‰∫éÊòØÂõûÊù•ÊÅ∂Ë°•Áü©ÈòµÂø´ÈÄüÂπÇ,ËøôËÆ∞ÂΩï‰∏Ä‰∏ã. ËøûÁü©ÈòµÈÉΩÊ≤°Êé•Ëß¶ËøáÁöÑËèúÈ∏°Ë°®Á§∫..ÊàëË¶ÅÂÖàÂ≠¶‰π†‰∏Ä‰∏ãÁü©ÈòµÊòØ‰∏™Âï•..: Áü©ÈòµÁöÑÂä†Ê≥ïÂíåÊï∞‰πòÈÉΩÂæàÁÆÄÂçïÁôæÂ∫¶‰æøÁü•,‰πòÊ≥ïÊâçÊòØÊàë‰ª¨Áü©ÈòµÂø´ÈÄüÂπÇÈúÄË¶Å‰∫ÜËß£ÁöÑ,ËøôÈáå‰ªãÁªç‰∏Ä‰∏ãÂâçÁΩÆÁü•ËØÜÁü©Èòµ‰πòÊ≥ï. Áü©Èòµ‰πòÊ≥ï ‰∏§‰∏™Áü©ÈòµÂèØ‰ª•Áõ∏‰πòÁöÑÁü©ÈòµÈúÄÊª°Ë∂≥ÁöÑÊù°‰ª∂Â∑¶Áü©ÈòµÁöÑÂàóÊï∞ÂøÖÈ°ªË¶Å‰∏éÂè≥Áü©ÈòµÁöÑË°åÊï∞Áõ∏ÂêåÁÆÄËÆ∞,‰πòÊ≥ïËøáÁ®ãÂ∞±ÊòØÂ∑¶Áü©ÈòµÁöÑË°å‰∏≠ÊØè‰∏Ä‰∏™Êï∞Â≠ó‰πò‰ª•Âè≥Áü©ÈòµÂàó‰∏≠ÁöÑÊØè‰∏Ä‰∏™Êï∞,‰πòÊ≥ïËøáÁ®ãÂ¶Ç‰∏ã ‰ª£Á†ÅÂÆûÁé∞Â¶Ç‰∏ã(ÁªìÊûÑ‰Ωì‰∏≠ÁöÑËøêÁÆóÁ¨¶ÈáçËΩΩ): 123456789//ÊñπÂΩ¢Áü©Èòµ.MAT operator*(MAT p) &#123; MAT res; for(int i=0;i&lt;M;i++) for(int j=0;j&lt;M;j++) for(int k=0;k&lt;M;k++) res.a[i][j]=(res.a[i][j]+a[i][k]*p.a[k][j])%mod; return res; &#125; Á¨¨‰∫å‰∏™ÂâçÁΩÆÁü•ËØÜ.Âπø‰πâÂø´ÈÄüÂπÇ.ÊâÄË∞ìÂπø‰πâÂø´ÈÄüÂπÇ,Â∞±ÊòØÊåáÂø´ÈÄüÂπÇÁöÑÊÄùÊÉ≥(‰∫åËøõÂà∂ÊÄùÊÉ≥),Â∞Ü‰∏≠ÂøÉËøêÁÆó‰øÆÊîπ.Âç≥ 12345678910MAT qpow(MAT a,ll b)&#123; MAT res = //ÂàùÂßãÂåñ; while(b)&#123; if(b &amp; 1) res = res * a ; //* ÊüêÁßçËøêÁÆó a = a * a; b &gt;&gt;= 1; &#125; return res;&#125; Ëã•ÊòØÈúÄË¶Å‰πòÊ≥ïËøêÁÆó,Â∞±Â∞ÜÂÖ∂* Êîπ‰∏∫+Âç≥ÂèØ,Ëã•ÊòØÁü©Èòµ‰πòËøêÁÆó,Â∞±Â∞Ü*Êîπ‰∏∫Áü©Èòµ‰πòÁöÑÂáΩÊï∞,ÊàñÈáçËΩΩ *. Áü©ÈòµÂø´ÈÄüÂπÇ ‰ªãÁªç‰∫ÜËøô‰πàÂ§öÂêé,Áü©ÈòµÂø´ÈÄüÂπÇÂ∞±Â∑Æ‰∏çÂ§öÁªìÊùü‰∫Ü‚Ä¶.emm..ÊØïÁ´ü‰∏§‰∏™‰∏ÄÂ•óÂ∞±Ë°å‰∫Ü‚Ä¶ ÈÇ£‰πà‰∏ãÈù¢Êù•ËØ¥ËØ¥Áü©ÈòµÂø´ÈÄüÂπÇÁöÑÂ∫îÁî®. Áü©ÈòµÂø´ÈÄüÂπÇÊúÄÊ£íÁöÑÂ∫îÁî®Â∞±Âú®‰∫éÂÆÉÂèØ‰ª•Âä†ÈÄüÈÄíÊé®,‰æãÂ¶ÇÊñêÊ≥¢ÊãâÂ•ëÊï∞Âàó,ÊàñÈöè‰æøÁöÑÈÄíÊé®Âºè.Âú®O(logn)ÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏ãÂÆåÊàêÈÄíÊé®.]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ÊùøÂ≠ê</tag>
        <tag>Êï∞Â≠¶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Codeforces Round #561 (Div2)]]></title>
    <url>%2Fpost%2Fcf561%2F</url>
    <content type="text"><![CDATA[ÂºÄÂºÄÂøÉÂøÉÁöÑ‰∏ÄÂú∫div2.Êú¨ËèúÈ∏°Á¨¨‰∏ÄÊ¨°‰∏ä‰∫Ü70+ÂàÜÂøÉÊÉÖËøòÊòØÂæàÊøÄÂä®ÁöÑÂìàÂìàÂìà‚Ä¶ Âëê,ÂØªÊÄùÁùÄÂàöÂºÄ‰∫Ü‰∏™ÂçöÂÆ¢ÂæóÂÜôÁÇπÂï•,Â∞±cfÁåÆÁ•≠‰∫Ü. ÂòøÂòøÂòøÂ∫üËØùÁªìÊùü. [TOC] A. Silent ClassroomÁ≠æÂà∞È¢ò È¢òÊÑè :ÁªôÂá∫n(n &lt; 100)‰∏™Â≠óÁ¨¶‰∏≤‰ª£Ë°®n‰∏™Â≠¶Áîü,Êúâ‰∏§‰∏™ÊàøÈó¥,‰∏§‰∏™È¶ñÂ≠óÁ¨¶Áõ∏ÂêåÁöÑÂ≠¶ÁîüËã•Âú®Âêå‰∏ÄÊàøÈó¥ Â∞±‰ºöËÅäÂ§©,ÂèØ‰ª•ÁªÑÊàê‰∏Ä‰∏™Êó†Â∫èÂØπ,Ë¶ÅÊ±ÇÊâæÂá∫‰∏§‰∏™ÊàøÈó¥‰∏≠ËÅäÂ§©ÂØπÊï∞ÊúÄÂ∞ëÁöÑÂàÜÈÖçÊñπÊ°à.Âπ∂ËæìÂá∫ÂØπÊï∞. Ê†∑‰æã:1234565mikemikemikemikemike ÂàÜ‰∏∫‰∏§‰∏™ÊàøÈó¥(1,2,3)(4,5) Â≠òÂú® + C(2,2) 123456789101112131415161718192021222324252627282930313233343536#### È¢òËß£:**Â≠òÂà∞stringÊï∞ÁªÑ‰∏≠ÊéíÂ∫è,Âπ∂Âπ≥ÂàÜÁõ∏ÂêåÈ¶ñÂ≠óÊØçÁöÑÂêåÂ≠¶,Ê±ÇÂíå.**#### ‰ª£Á†Å```cppBy boluotou, contest: Codeforces Round #561 (Div. 2), problem: (A) Silent Classroom, Accepted, # #include &lt;bits/stdc++.h&gt;using namespace std;string s[105];int main()&#123; int n; cin&gt;&gt;n; for(int i = 0;i &lt; n;++i) cin&gt;&gt;s[i]; sort(s,s + n); int ans = 0; int tmp = 1; for(int i = 1;i &lt; n;++i)&#123; if(s[i][0] == s[i-1][0]) tmp++; else&#123; if(tmp &gt; 2) ans += ( (tmp/2 * (tmp/2-1)/2) ) + (((tmp-tmp/2) * ((tmp - tmp/2)-1) / 2)); //C(tmp, 2) + C(tmp-tmp/2, 2) tmp = 1; &#125; &#125; if(tmp &gt; 2) ans += ( (tmp/2 * (tmp/2-1)/2) ) + (((tmp-tmp/2) * ((tmp - tmp/2)-1) / 2)); printf(&quot;%d\n&quot;,ans); return 0;&#125; B. All the Vowels PleaseÂêåÁ≠æÂà∞È¢ò È¢òÊÑèÁªôÂá∫‰∏Ä‰∏™Êï∞Â≠ók,ÈóÆËÉΩÂê¶ÂæóÂà∞‰∏Ä‰∏™nmÁöÑÊñπÈòµ,‰ΩøÊñπÈòµÊØèË°åÊØèÂàóÂùáÂ≠òÂú®‰∫îÂÖÉÈü≥Â≠óÊØçaeiou.Ëã•Â≠òÂú®‰ª•*‰∏ÄË°åËæìÂá∫ÊñπÈòµÂ≠óÁ¨¶,Âê¶ÂàôËæìÂá∫-1** Ê†∑‰æã1234input36outputagoeuioaeiruuimaeoieauoweouoiaouimae È¢òËß£Êö¥ÂäõÂà§Êñ≠ËÉΩÂê¶ÊûÑÊàên * m ÊñπÈòµ(n,m &gt; 5),Ëã•ÂèØ‰ª•,ÊûÑÂª∫aeiouÂ≠óÁ¨¶Êï∞ÁªÑÂæ™ÁéØËæìÂá∫,Âê¶ÂàôËæìÂá∫-1 ‰ª£Á†Å1234567891011121314151617181920212223242526272829#include &lt;bits/stdc++.h&gt;using namespace std;char a[6] = "aeiou";int main()&#123; int k; scanf("%d",&amp;k); int x,y; x = y = 0; for(int i = 5;i &lt; k;++i)&#123; if(k % i == 0 &amp;&amp; k/i &gt;= 5)&#123; x = i; y = k/i; &#125; &#125; if(!x) puts("-1"); else&#123; for(int i = 0;i &lt; x;++i)&#123; for(int j = 0;j &lt; y;++j)&#123; printf("%c",a[(j + i) % 5]); &#125;// puts(""); &#125; &#125; return 0;&#125; C. A Tale of Two LandsÈ¢òÊÑèÁªôÂá∫n‰∏™Êï∞,Ê±ÇÂá∫Êª°Ë∂≥ min(x-y,x+y) &lt;= min(x,y) &lt;= max(x,y) &lt;= max(x-y,x+y) ÁöÑ Êó†Â∫èÂØπÂØπÊï∞. Ê†∑‰æã12345input32 5 -3output2 È¢òËß£Á®çÂä†ÂàÜÊûê,ÂØπ‰∫é x ,Êª°Ë∂≥‰∏éÂÖ∂ÁªÑÈòüÁöÑyÁöÑÊù°‰ª∂‰∏∫ y &gt;= (x+1)/2 &amp;&amp; y &lt;= x*2 (x,yÂùáÂèñÁªùÂØπÂÄº) ‰∫éÊòØÂèØ‰ª•ÂØπÂÖ∂ËøõË°åÁªùÂØπÂÄºÊéíÂ∫èÂêé(Onlogn),ÈÄê‰∏ÄÂØªÊâæÊª°Ë∂≥ÂÖ∂Êù°‰ª∂ÁöÑÂÄº,‰∏∫Èò≤Ê≠¢ÈáçÂ§çÂØªÊâæ,Âè™ÂØªÊâæ[(x+1)/2,x]ËåÉÂõ¥.ÂØªÊâæËøáÁ®ã‰∫åÂàÜ‰ºòÂåñ(Onlogn) Ê≥®ÊÑèÂºÄlong long!!! ‰ª£Á†Å12345678910111213141516171819202122232425#include &lt;bits/stdc++.h&gt;using namespace std;int a[200005];int main()&#123; int n; scanf("%d",&amp;n); for(int i = 0;i &lt; n;++i)&#123; scanf("%d",&amp;a[i]); a[i] = abs(a[i]); &#125; sort(a,a + n); long long ans = 0; for(int i = 0;i &lt; n;++i)&#123; int x = (a[i]+1)/2; int pos = lower_bound(a,a+i,x)-a; ans += (i-pos); &#125; printf("%lld\n",ans); return 0;&#125; D. Cute Sequences]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ICPC</tag>
        <tag>È¢òËß£</tag>
        <tag>Codeforces</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êñ∞ÁöÑ‰∏ÄÂ§©,Êñ∞ÁöÑBlog!]]></title>
    <url>%2Fpost%2F%E6%96%B0%E7%9A%84%E4%B8%80%E5%A4%A9-%E6%96%B0%E7%9A%84blog!%2F</url>
    <content type="text"><![CDATA[ÂìàÂìàÂìàÁªèËøá‰∏ÄÊï¥Â§©ÊäòËÖæÊàëÁöÑblogÁªà‰∫éË¶Å‰∏äÁ∫øÂï¶(ÂÆûÂêçËÆ§ËØÅËøáÂêé)üòÅ ËôΩÁÑ∂Ëøô‰πà‰πÖ‰∫Ü‰πüÊ≤°ÂÜôËøá‰∏§ÁØáÂçöÂÆ¢,‰ΩÜÊòØÊàëËøòÊòØÊúâÂÜ≥ÂøÉË¶ÅÂùöÊåÅ‰∏ãÊù•ÁöÑ,ÊØïÁ´üÂæóÊúâ‰∏™ÊÄªÁªìÂ≠¶‰π†ÁöÑÂú∞ÊñπÂØπÂêß(‰∏•ËÇÉ). Êõ¥‰∏ªË¶ÅÊòØ‚Ä¶Â≠¶ËøáÁöÑ‰∏úË•øÂÖ®ÈÉΩÂøòÂæóÂ∑Æ‰∏çÂ§ö‰∫Üüò≠,ÊâçÊÉ≥Ëµ∑ÂÜôÁÇπÂçöÂÆ¢ ÊØïÁ´üÊàëËøô‰πàÊáí emm~ÂçöÂÆ¢‰∏ªË¶ÅÂÜô‰∏Ä‰∫õÈ¢òËß£ÂíåÂØπÁÆóÊ≥ïÁöÑ‰∏Ä‰∫õÁêÜËß£Âêß,È°∫‰æøÁî®Êù•ËÆ∞‰∏Ä‰∏ãc++,pyÁöÑÂ≠¶‰π†Á¨îËÆ∞Â•Ω‰∫Ü. ÊÉ≥Êù•ËøôÊµëÊµëÂô©Âô©ÁöÑ‰∏ÄÂπ¥‰πüÊ≤°Ê≤âÊ∑Ä‰∏ãÊù•Âï•,Â∞±ÊúâÁÇπÁÅ∞ÂøÉ. üòîÂæÄ‰∫ã‰∏çÂ†™ÂõûÈ¶ñ,ICPCË∑ØËøòËøúÁöÑÂæà,‰∫¶Ê≠•‰∫¶Ë∂ãÂæÄÂâçËµ∞Âêß.]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>ÈöèÁ¨î</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â§ßÊï∞ËøêÁÆóÊ®°Êãü]]></title>
    <url>%2Fpost%2F%E5%A4%A7%E6%95%B0%2F</url>
    <content type="text"><![CDATA[‰ªéÂâçÁöÑÂ§ßÊï∞Ê®°ÊãüÈÉΩÊòØËá™Â∑±Áî®Â≠óÁ¨¶‰∏≤Êù•Êï≤ÁöÑ,Á™ÅÁÑ∂ÁúãÂà∞ÂêåÂ≠¶ÁöÑ‰ª£Á†ÅÂêéÈáäÊîæ‰∫ÜÂæàÂ§öÊÄùÁª¥,‰∏ç‰ªÖÊï≤ÂæóÂø´Ëøò‰∏çÂÆπÊòìÈîô,‰∫éÊòØÊâæ‰∏™Êôö‰∏äÊï≤‰∏ãÂ§ßÊï∞ÁöÑ‰∏Ä‰∫õÊ®°Êãü,Áïô‰∏ãÊùøÂ≠êËÆ∞ÂΩï‰∏Ä‰∏ã. ÂØπ‰∫éË¥üÊï∞Âä†ÂáèÊ®°ÊãüËøêÁÆóÊàë‰ª¨ÂèØ‰ª•ÂàÜÊÉÖÂÜµËÆ®ËÆ∫Âπ∂ÁºñÂÜôÂè¶‰∏Ä‰∏™ÂáΩÊï∞,Âç≥: Ëã•‰∏§Êï∞ÂùáÊ≠£ 1* Ëã•‰∏§Êï∞ÂùáË¥ü ```ans = &apos;-&apos; + add(a,b) Ëã•‰∏ÄÊ≠£‰∏ÄË¥ü 1234567891011121314151617181920212223**ÂèØÊãüÂáΩÊï∞**```cppstring add_op(string a,string b)&#123; string ans; if(a[0] == &apos;-&apos; &amp;&amp; b[0] == &apos;-&apos;)&#123; a.erase(a.begin()); b.erase(b.begin()); ans = &apos;-&apos; + big_add(a,b); &#125; else if(a[0] == &apos;-&apos;)&#123; a.erase(a.begin()); ans = big_sub(b,a); &#125; else if(b[0] == &apos;-&apos;)&#123; b.erase(b.begin()); ans = big_sub(a,b); &#125; else&#123; ans = big_add(a,b); &#125; return ans;&#125; Â§ßÊï∞Âä†Ê≥ï 123456789101112131415161718192021222324252627282930313233343536373839404142434445//‰∏çÊîØÊåÅË¥üÊï∞const int MAXN = 1e8 + 10;int t[MAXN];string big_add(string a,string b)&#123; int len1 = a.size(); int len2 = b.size(); reverse(a.begin(),a.end()); //Ë∞ÉÊç¢È°∫Â∫èÊñπ‰æøÂ§ÑÁêÜ reverse(b.begin(),b.end()); if(len1 &lt; len2)&#123; swap(a,b); //‰ª§aÊòØÊï∞‰ΩçËæÉÈïøÁöÑÊï∞ swap(len1,len2); &#125; for(int i = 0;i &lt; len2;++i)&#123; //tÊï∞ÁªÑÂ≠òÂú®Á¨¨i‰Ωç‰∏ä‰∏§Êï∞Áõ∏Âä†ÁöÑÁªìÊûú,ÊöÇÊó∂‰∏çËøõ‰Ωç t[i] = a[i] -'0' + b[i] - '0'; &#125; for(int i = len2;i &lt; len1;++i)&#123; t[i] = a[i] - '0'; &#125; int flag = 0; //flag Ê†áÂøóÊòØÂê¶ÈúÄË¶ÅËøõ‰Ωç for(int i = 0;i &lt; len1;++i)&#123; if(flag) &#123; t[i]++; flag = 0; &#125; if(t[i] &gt;= 10)&#123; t[i]-=10; flag = 1; &#125; &#125; if(flag) t[len1] = 1; //Â§ÑÁêÜÊúÄÈ´ò‰ΩçÊòØÂê¶ÈúÄË¶ÅËøõ‰Ωç,Ëã•‰∏çÈúÄË¶Å‰ª§ÊúÄÈ´ò‰Ωç‰∏∫ 0 else t[len1] = 0; string ans; flag = 0; for(int i = len1;i &gt;= 0 ;--i)&#123; //ÂéªÈô§ÂâçÂØº0 if( flag == 0 &amp;&amp; t[i] == 0) continue; flag = 1; ans.push_back(t[i] + '0'); &#125; if(ans.empty()) ans.push_back('0'); return ans;&#125; Â§ßÊï∞ÂáèÊ≥ï 12345678910111213141516171819202122232425262728293031323334353637383940const int MAXN = 1e8 + 10;int t[MAXN];string big_sub(string a,string b)&#123; string ans; int len1 = a.size(); int len2 = b.size(); reverse(a.begin(),a.end()); //Ë∞ÉÊç¢È°∫Â∫è‰æø‰∫éÂ§ÑÁêÜ reverse(b.begin(),b.end()); for(int i = 0;i &lt; len2 ;++i)&#123; //tÊï∞ÁªÑ‰øùÂ≠òÁ¨¨i‰Ωç‰∏ä‰∏§Êï∞‰πãÂ∑Æ t[i] = a[i] - b[i]; &#125; for(int i = len2;i &lt; len1;++i)&#123; t[i] = a[i] - '0'; //Ëã•a‰ΩçÊï∞ËæÉÈïø,ÂàôÈïøÂ∫¶Ë∂ÖËøábÁöÑ‰ΩçÁªìÊûú‰∏∫a[i] - 0 &#125; int flag = 0; for(int i = 0;i &lt; len1;++i)&#123; //ÂÄü‰Ωç if(flag)&#123; flag = 0; t[i]--; &#125; if(t[i] &lt; 0)&#123; t[i]+=10; flag = 1; &#125; &#125; flag = 0; for(int i = len1-1;i &gt;= 0;--i)&#123; //ÂéªÈô§ÂâçÂØº0 if(!flag &amp;&amp; t[i] == 0) continue; flag = 1; ans.push_back(t[i] + '0'); &#125; if(ans.empty()) ans.push_back('0'); //Ëã•ÁªìÊûú‰∏∫0,Á≠îÊ°à ans = 0 return ans;&#125; Â§ßÊï∞‰πòÊ≥ï 123456789101112131415161718192021222324252627282930313233int t[10000000];string mul(string a,string b)&#123; reverse(a.begin(),a.end()); //‰∫§Êç¢È°∫Â∫èÔºåÊñπ‰æøËÆ°ÁÆó reverse(b.begin(),b.end()); int len1=a.size(); int len2=b.size(); for(int i = 0;i &lt; len1;++i) for(int j = 0;j &lt; len2;++j) t[i+j]=(a[i]-'0')*(b[j]-'0')+t[i+j]; //ÂÖàÊï¥‰Ωì‰πòËµ∑Êù•Ôºå‰∏çËøõ‰Ωç t[len1 + len2 -1] = 0; //Ëøõ‰Ωç for(int i = 0;i &lt; len1 + len2;++i)&#123; t[i+1] += t[i] / 10; t[i] %= 10; &#125; int x = len1 + len2; //ÁªìÊûúÊúÄÈïøÁöÑ‰ΩçÊï∞ if(t[len1 + len2-1] == 0) x--; string ans = ""; int flag = 1; //flagÁî®Êù•ÂÅöÂÅöÂéªÈô§ÂâçÂØºÈõ∂ÁöÑÊ†áËÆ∞ for(int i = x-1;i &gt;= 0;--i)&#123; if(t[i] == 0 &amp;&amp; flag) &#123; continue; &#125; flag = 0; ans.push_back(t[i] + '0'); &#125; if(ans.empty()) ans.push_back('0'); //Ëã•ÁªìÊûú‰∏∫Èõ∂,ËøîÂõû"0" return ans;&#125; Â§ßÊï∞Ê±ÇÊ®° 12345678910//Â§ßÊï∞Ê±ÇÊ®°Â∞±ÂæàÁÆÄÂçï‰∫Ü,Ê†πÊçÆÂêå‰ΩôÂÆöÁêÜÊù•Êåâ‰ΩçÊ±ÇÊ®°Â∞±Â•Ω‰∫Ülong long big_mod(string a,long long mod)&#123; int len=a.size(); long long ans=0; for(int i=0;i&lt;len;++i) ans=(ans*10%mod+a[i]-&apos;0&apos;)%mod; return ans;&#125;]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ICPC</tag>
        <tag>ÊùøÂ≠ê</tag>
        <tag>Ê®°Êãü</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰∏ÄÁª¥Ê†ëÁä∂Êï∞ÁªÑËØ¶Ëß£]]></title>
    <url>%2Fpost%2F%E4%B8%80%E7%BB%B4%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[Ê†ëÁä∂Êï∞ÁªÑÁöÑÁÆÄÊ¥ÅÊòìÁî®ÁÆÄÁõ¥ÊòØÊØîËµõÁ•ûÂô®..ËÄå‰∏îÁêÜËß£‰πü‰∏çÈöæ ÊàëËøôÊ†∑ÁöÑËèúÈ∏°ÈÉΩÂ≠¶‰ºö‰∫Ü ÈÇ£‰πàÂ∞±ÂÜô‰∏ÄÁØáÊïôÁ®ãÊùÉÂΩìÊÄªÁªìÂêß..‰ª•ÂÖçÊó•ÂêéÂøò‰∫Ü.. Ë¶Å‰∫ÜËß£Ê†ëÁä∂Êï∞ÁªÑ,È¶ñÂÖàÈúÄË¶Å‰∫ÜËß£ÂÆÉÊòØÁî®Êù•ÂÅö‰ªÄ‰πàÁöÑ.ÈÇ£‰πà: Ê†ëÁä∂Êï∞ÁªÑÁöÑÈóÆÈ¢òÊ®°Âûã ÂçïÁÇπÁª¥Êä§,Âå∫Èó¥Êü•ËØ¢(PUIQÈóÆÈ¢ò) Âå∫Èó¥Áª¥Êä§,ÂçïÁÇπÊü•ËØ¢(IUPQÈóÆÈ¢ò) Ê±ÇÈÄÜÂ∫èÂØπÈóÆÈ¢ò Ê†ëÁä∂Êï∞ÁªÑÁöÑÈÄªËæëÊ®°ÂûãÂ¶ÇÂõæ:Á™ÅÁÑ∂‰∏ÄÁúãÂèØËÉΩÈöæ‰ª•ÁêÜËß£,ÈÇ£‰πàÊòØ‰ªÄ‰πàÊääÂÆÉ‰ª¨ËÅîÁ≥ªËµ∑Êù•ÁöÑÂë¢?Êé•‰∏ãÊù•‰ªãÁªçlowbitÂáΩÊï∞ lowbit(Ê±Ç‰∫åËøõÂà∂Êï∞ÊúÄÂêé‰∏Ä‰Ωç1ÁöÑ‰ΩçÁΩÆ)ËøôÈáåÁî®Âà∞‰∫ÜË°•Á†ÅÁöÑÂéüÁêÜ: Âç≥Ë¥üÊï∞ÁöÑË°•Á†Å‰∏∫ÂÖ∂‰∫åËøõÂà∂ÁªùÂØπÂÄºÂèñÂèç+1,ËÄåÂΩìÂÖ∂‰∏éÂÖ∂ÁªùÂØπÂÄºÂèñ&amp;Êìç‰ΩúÊó∂ÂæóÂà∞ÁöÑÊÅ∞Â•ΩÂ∞±ÊòØÂÖ∂‰∫åËøõÂà∂ÊúÄÂêé‰∏Ä‰Ωç1ÁöÑ‰ΩçÁΩÆ ‰æãÂ¶Ç:00001000(8)ÁöÑË¥üÊï∞Ë°•Á†Å‰∏∫11111000(-8) ‰∏éÊìç‰ΩúÂêé‰∏∫00001000 ËÄålowbit(8)ÁöÑÂÄºÂ∞±‰∏∫ 00001000; Âàô lowbitÂáΩÊï∞‰ª£Á†Å 1234inline int lowbit(int x)&#123; return x &amp; -x;&#125; ËøôÈáåÂ∞±Á®çÂæÆÂÅè‰∏™È¢òÈ°∫‰æø‰ªãÁªç‰∏Ä‰∏ãinline(ÂÜÖËÅîÂáΩÊï∞) C++ÂÖ≥ÈîÆÂ≠óÔºåÂú®ÂáΩÊï∞Â£∞ÊòéÊàñÂÆö‰πâ‰∏≠ÂáΩÊï∞ËøîÂõûÁ±ªÂûãÂâçÂä†‰∏äÂÖ≥ÈîÆÂ≠óinlineÔºåÂç≥ÂèØ‰ª•ÊääÂáΩÊï∞ÊåáÂÆö‰∏∫ÂÜÖËÅîÂáΩÊï∞„ÄÇ Âú®c/c++‰∏≠Ôºå‰∏∫‰∫ÜËß£ÂÜ≥‰∏Ä‰∫õÈ¢ëÁπÅË∞ÉÁî®ÁöÑÂ∞èÂáΩÊï∞Â§ßÈáèÊ∂àËÄóÊ†àÁ©∫Èó¥ÔºàÊ†àÂÜÖÂ≠òÔºâÁöÑÈóÆÈ¢òÔºåÁâπÂà´ÁöÑÂºïÂÖ•‰∫Üinline‰øÆÈ•∞Á¨¶ÔºåË°®Á§∫‰∏∫ÂÜÖËÅîÂáΩÊï∞„ÄÇÊ≠§ÂÖ≥ÈîÆÂ≠ó‰ªÖÊòØÂØπÁºñËØëÂô®ÁöÑ‰∏ÄÁßçÂª∫ËÆÆ,Âπ∂ÈùûÂº∫Âà∂.ÂØπ‰∫éÂÜÖÂÆπËæÉÁü≠‰∏îÊó†Âæ™ÁéØÁöÑ‰ª£Á†Å,inlineÁöÑ‰ΩøÁî®ÂèØ‰ª•Â¢ûÂä†ÂáΩÊï∞ËøêË°åÁöÑÊïàÁéá,‰ΩÜÂÖ∂ÊïàÁéáÁöÑÂ¢ûÂä†ÊòØ‰ª•‰ª£Á†ÅÈïøÂ∫¶‰∏∫‰ª£‰ª∑,ÊâÄ‰ª•,‰ªÖÂú®Áü≠‰∏îÊó†Âæ™ÁéØÁöÑÂáΩÊï∞ÂâçÂèØ‰ª•‰ΩøÁî®,ÂÖ∂‰ªñÊÉÖÂÜµÈÅøÂÖç‰ΩøÁî®. ÂéüÁêÜ ÈÇ£‰πàlowbitÂáΩÊï∞ÁöÑÁî®Â§ÑÊòØ‰ªÄ‰πàÂë¢. ËÆ©Êàë‰ª¨‰ª•‰∫åËøõÂà∂ÊÄùÁª¥Á®çÂæÆÊ≥®ÊÑè‰∏Ä‰∏ãÂèØ‰ª•ÂèëÁé∞,ÊØè‰∏™Â∫èÂè∑ÁöÑ‰∫åËøõÂà∂Êï∞ÁöÑÂêéÂØº0ÁöÑ‰∏™Êï∞,ÊÅ∞‰∏∫ÂÖ∂ÂåÖÂê´ÁöÑÊï∞ÁªÑÁöÑÊ∑±Â∫¶(Ëá™Â∫ïÂêë‰∏äÁöÑ),ËÆæÂÖ∂‰∏∫d,ÈÇ£‰πàÂÖ∂ÂåÖÂê´ÁöÑËåÉÂõ¥Â∞±ÊòØÂåÖÊã¨ÂÆÉÂêëÂâçÁöÑ2^d‰∏™Êï∞.Â¶Ç100(4)‰∏∫‰ªé100ÂêëÂâç4‰∏™ÂéüÊï∞ÁªÑ‰∏≠ÁöÑÊï∞ÁöÑÂíå,ËÄå110(6)ÊòØ‰ªé110ÂêëÂâç2‰∏™ÂéüÊï∞ÁªÑ‰∏≠ÁöÑÊï∞ÁöÑÂíå. Êàë‰ª¨‰ª§ÂéüÊï∞ÁªÑ‰∏∫a[],Ê†ëÁä∂Êï∞ÁªÑ‰∏∫tree[]. ËøôÊó∂,Êàë‰ª¨ÂèØ‰ª•ÁêÜËß£treeÊï∞ÁªÑ‰∏≠Â≠òÂÇ®ÁöÑÂà∞Â∫ïÊòØ‰ªÄ‰πàÊï∞ÊçÆ,ÈÇ£‰πàÂØπ‰∫é‰ª•‰∏äÈóÆÈ¢òÊ®°Âûã,Êàë‰ª¨ËØ•Â¶Ç‰ΩïÊ±ÇËß£Âë¢. Êõ¥Êñ∞(updateÂáΩÊï∞)Êàë‰ª¨Ë¶ÅÊõ¥Êñ∞ÂéüÊï∞ÁªÑ‰∏≠Êüê‰∏Ä‰∏™Êï∞,ÈÇ£‰πàÂ∞±ÂæóÊõ¥Êñ∞Ê†ëÁä∂Êï∞ÁªÑ‰∏≠ÊâÄÊúâÂåÖÂê´ÂÆÉÁöÑÊï∞ÊçÆ,ÈÇ£‰πà,ÈÉΩÊúâÂì™ÁªÑÊï∞ÊçÆÂåÖÂê´ÂÆÉÂë¢,‰πüÂ∞±ÊòØÂØªÊâæËøô‰∏™Â≠êËäÇÁÇπÁöÑÊâÄÊúâÊ†πËäÇÁÇπÁöÑÁâπÁÇπ. ËøôÊó∂,Â∞±ÂèàËΩÆÂà∞Êàë‰ª¨ÁöÑlowbitÂáΩÊï∞‰∏äÂú∫‰∫Ü,xÁöÑÊâÄÊúâÁà∂ËäÇÁÇπÂè™ÈúÄ+ lowbit(x)```Â∞±ÂèØ‰ª•ÂæóÂà∞.12345678ÈÇ£‰πàupdateÂáΩÊï∞ÁöÑ‰ª£Á†Å(Êó∂Èó¥Â§çÊùÇÂ∫¶O(logn)):```cpp//x‰∏∫ÈúÄË¶Å‰øÆÊîπÁöÑËäÇÁÇπ,v‰∏∫a[x]Â¢ûÂä†ÁöÑÂÄº,nÊòØÊ†ëÁä∂Êï∞ÁªÑÁöÑÊúÄÂ§ßËåÉÂõ¥.void update(int x,int v)&#123; for(;x &lt;= n;x += lowbit(x)) tree[x] += v;&#125; Êü•ËØ¢(queryÂáΩÊï∞)ÂØπ‰∫éÊ†ëÁä∂Êï∞ÁªÑtree,Êàë‰ª¨ÂèØ‰ª•‰∫ÜËß£ÂÖ∂Â≠òÂÇ®ÁöÑÂÄºÂÆûË¥®‰∏äÊòØÊüê‰∏ÄÂå∫Èó¥ÁöÑÂâçÁºÄÂíå.Êàë‰ª¨Êü•ËØ¢Êüê‰∏ÄÊÆµÂå∫Èó¥(x,y)ÁöÑÂÄº,Â∞±Âè™ÈúÄË¶ÅÊ±ÇÂá∫yÁöÑÂâçÁºÄÂíåÂáèÂéªx-1ÁöÑÂâçÁºÄÂíåËøôÊ†∑ÂæóÂà∞ÁöÑ,Â∞±ÊòØÂå∫Èó¥(x,y)ÁöÑÂíå. ÈÇ£‰πà(1,x)Âå∫Èó¥ÁöÑÂâçÁºÄÂíåÊÄé‰πàÊ±ÇÂë¢,‰ªçÁÑ∂ÊòØlowbitÂáΩÊï∞,Âè™ÈúÄË¶ÅÂÅö‰∏ÄÈÅçÊõ¥Êñ∞ÁöÑÈÄÜËøáÁ®ã,Âç≥ËÆ°ÁÆótreeÊï∞ÁªÑ(x-&gt;1)ÁöÑÂíåÂ∞±ÂèØ‰ª•Ê±ÇÂá∫ÊâÄÊúâ‰∏çÈáçÂêàÁöÑÂå∫Èó¥ÂâçÁºÄÂíå. ‰∏∫‰ªÄ‰πàtree(x-&gt;1)Â∞±ÊòØËØ•Âå∫Èó¥ÁöÑÂâçÁºÄÂíå? Âú®‰∫åËøõÂà∂ÁöÑËßÜËßí‰∏ã,xÁöÑÊï∞‰Ωç‰∏äÊØè‰∏Ä‰∏™1,ÈÉΩ‰ª£Ë°®ÂÖ∂‰∏ÄÊÆµÂüüÂÜÖÁöÑÂÄº,ÈÇ£‰πà,ÊØè‰∏™1ÈÉΩÂøÖÁÑ∂‰∏éÂÖ∂‰ªñ1ÁöÑËåÉÂõ¥‰∏çÈáçÂêà‰æãÂ¶Ç:12345678910Â¶ÇÊ≠§,queryÁöÑ‰ª£Á†ÅÂ∞±ÂæàÊòé‰∫Ü‰∫Ü.```cppint query(int x)&#123; int res = 0; for(;x &gt; 0;x -= lowbit(x)) res += tree[x]; return res;&#125; ÊùøÂ≠êÈ¢òÈìæÊé•(luoguP3374) Âà∞Ê≠§‰∏∫Ê≠¢,Êàë‰ª¨ËÆ≤Ëß£ÁöÑÂ∞±ÊòØPUIQÊ®°Âûã,Âç≥ÁÇπÊõ¥Êñ∞,ÊÆµÊü•ËØ¢. ÊÄé‰πàÊ†∑‰ª£Á†ÅÊòØ‰∏çÊòØÁü≠Âà∞ÊÄÄÁñë‰∫∫Áîü,ËøôÂú®ËµõÂú∫‰∏äÂÜôËµ∑Êù•‰∏çÊòØËàíËàíÊúçÊúç? ÈÇ£‰πà,Êé•‰∏ãÊù•ÁöÑIUPQÊ®°Âûã,Â∞±ÈúÄË¶Å‰∏Ä‰∏™ÂàáÂÖ•ÁÇπÊù•ÂÆåÊàêÊìç‰Ωú‰∫Ü. IUPQÊ®°ÂûãÁöÑËß£È¢òÂàáÂÖ•ÁÇπ‚ÄîÂ∑ÆÂàÜÂΩìÊàë‰ª¨ÊÉ≥Ë¶ÅËøõË°åÊÆµÊõ¥Êñ∞Êó∂,ÈÇ£‰πàÂ¶ÇÊûú‰ªçÁÑ∂Áî®‰∏äÈù¢ÁöÑ‰ª£Á†Å,Â∞±‰∏çÂæó‰∏çÊ∑ªÂä†‰∏Ä‰∏™forÂæ™ÁéØ,Ê≠§Êó∂updateÂáΩÊï∞ÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶‰ºö‰∏äÂçáÂà∞O(nlogn),ÈÇ£‰πà,ÊúâÊ≤°Êúâ‰ªÄ‰πàÊñπÊ≥ïÊù•‰ºòÂåñÊìç‰ΩúÂë¢?Ëß£ÂÜ≥ÊñπÊ°àÂ∞±ÊòØ‚ÄìÂ∑ÆÂàÜ Â∑ÆÂàÜ,‰πüÂ∞±ÊòØÂÆö‰πâ‰∏Ä‰∏™Â∑ÆÂàÜÊï∞ÁªÑbÊù•Â≠òÂÇ®aÊï∞ÁªÑÁöÑÂ∑ÆÂÄº,ËÄåtree‰Ωú‰∏∫Êï∞ÁªÑbÁöÑÊ†ëÁä∂Êï∞ÁªÑ. Âç≥: 1234567b[1] = a[1]b[2] = a[2] - a[1]b[4] = a[4] - a[1]tree[1] = b[1]tree[2] = b[2] + tree[1]tree[4] = tree[2] + tree[3] + b[4] ÈÇ£‰πàËøôÊó∂ÁöÑaÊï∞ÁªÑÂÄºËØ•Â¶Ç‰ΩïÂæóÂà∞Âë¢? ÂØπ‰∫ébÊï∞ÁªÑ,+...+b[n]```12345ËÄåqueryÂáΩÊï∞ÂàöÂ•ΩÂ∞±ÊòØÁî®Êù•Ê±Çb[n]ÁöÑÂâçÁºÄÂíå,‰πüÂ∞±ÊòØa[n]ÁöÑÂÄº.ÈÇ£‰πàÊõ¥Êñ∞Êìç‰ΩúÂë¢,ÂØπ‰∫éÂ∑ÆÂàÜÊï∞ÁªÑb,Ëã•Êàë‰ª¨ÊÉ≥Ë¶ÅÊõ¥Êñ∞```[l,r]```ËåÉÂõ¥ÂÜÖÁöÑÂÄº+v,ÈÇ£‰πàÊàë‰ª¨Âè™ÈúÄË¶ÅÂ∞Ü```b[l]```Êõ¥Êñ∞‰∏∫```b[l] + v```Â∞±‰ª£Ë°®ÁùÄ```a[l] - a[n]```ÊâÄÊúâÊï∞ÈÉΩ+1,ËÄåÂú®```b[r+1]```Â§ÑÂ∞Ü+vÁöÑÊïàÊûúÊ∂àÈô§,Âç≥```b[r+1] - v ÈÇ£‰πàÂ¶Ç‰ΩïÂ∞ÜËøô‰∏™Êìç‰ΩúÊõ¥Êñ∞Âú®treeÊï∞ÁªÑ‰∏≠,Â∞±ÊòØ‰∏äÊñáupdateÁöÑ‰∫ãÊÉÖ‰∫Ü. Âç≥Âè™ÈúÄÊõ¥Êñ∞b[l]+v,b[r+1]-vÂç≥ÂèØ 12update(l,v);update(r+1,-v); Â§çÊùÇÂ∫¶ÂêåÊ†∑‰∏∫O(logn) ÊùøÂ≠êÈ¢òÈìæÊé•(luoguP3368) Ê±ÇÈÄÜÂ∫èÂØπÈóÆÈ¢òÈóÆÈ¢òÊ®°Âûã,ÁªôÂÆön‰∏™Êï¥Êï∞,Ê±ÇÂá∫ÈÄÜÂ∫èÊï¥Êï∞ÂØπÊï∞(Âç≥> a[v] && u < v```ÁöÑÊï¥Êï∞ÂØπ)12345678ÁúãËßÅÈ¢òÁõÆÊàë‰ª¨Â∞±ÂèØ‰ª•ÂÜôÂá∫O(n2)ÁöÑÊö¥ÂäõforÊù•Ê±ÇËß£,‰ΩÜÊòØÂ¶Ç‰ΩïÂ∞ÜÂÖ∂Áî®Ê†ëÁä∂Êï∞ÁªÑÊù•‰ºòÂåñÂà∞O(nlogn)Âë¢ËøôÈáåÁî®Âà∞Ê°∂ÊéíÂ∫èÁöÑÊÄùÊÉ≥.È¶ñÂÖàËÆ©ÈóÆÈ¢òÁÆÄÂçïÂåñ‰∏ÄÁÇπ,ËÆ©n‰∏™Êï¥Êï∞a[i]ÂùáÂ∞è‰∫éÁ≠â‰∫é100.ÈÇ£‰πàÊàë‰ª¨Â∞±ÂèØ‰ª•ÂºÄtree[105]ÁöÑÊï∞ÁªÑ,ÊØèÊ¨°ËØªÂÖ•Êõ¥Êñ∞‰∏Ä‰∏™Êï∞Êó∂,Âè™ÈúÄ```update(a[i],1) Ê≠§Êó∂,ÊØîa[i]Â§ßÁöÑÊï∞Â≠óÂ∞±ÊòØÈúÄË¶ÅÊõ¥Êñ∞ÁöÑÈÄÜÂ∫èÂØπÂØπÊï∞,Âç≥- query(a[i])```Âõ†‰∏∫ÂΩìÂâçÂÖ±ËØªÂÖ•‰∫Üi‰∏™Êï∞,ÈÇ£‰πàÊ±ÇÂÄº‰∫¶ÂèØÁÆÄÂåñ‰∏∫```i - query[a[i]]```12345678910111213141516171819202122‰πüÂ∞±ÊòØËØªÂÖ•‰∏ÄËΩÆ+ÊØèÊ¨°Êü•ËØ¢Â∞±ÂèØÂæóÂà∞ÊÄªÂÖ±ÁöÑÈÄÜÂ∫èÂØπÂØπÊï∞.Êó∂Èó¥Â§çÊùÇÂ∫¶O(nlogn)ÈÇ£‰πàÂΩìÊï∞ÊçÆË∂≥Â§üÂ§ßÊó∂,Êàë‰ª¨ÁöÑÊï∞ÁªÑÂ≠ò‰∏ç‰∏ãÁöÑÊó∂ÂÄôÂë¢,ËøôÊó∂ÂÄô,Â∞±ËΩÆÂà∞Êàë‰ª¨ÁöÑÊ†∏ÂøÉÊÄùÊÉ≥,Á¶ªÊï£ÂåñÂá∫Âú∫‰∫Ü.ÂØπ‰∫éÁ¶ªÊï£Âåñ,‰∏™‰∫∫ÁêÜËß£Â∞±ÊòØÁî±‰∫éÊÉ≥Ë¶ÅÂà©Áî®Ê°∂Êï∞ÁªÑ,ÊïÖÂ∞ÜÊï∞ÊçÆÁõ∏ÂØπÁº©Â∞è(‰øùËØÅÁõ∏ÂØπÂ§ßÂ∞è‰∏çÂèò)Âà∞ÂèØ‰ª•ÂºÄÂà∞ÁöÑÊï∞ÁªÑÈÇ£‰πàÂ§ßËÄåÂáèÂ∞èÁ©∫Èó¥ÈúÄÊ±Ç.ÈÇ£‰πàÂà∞Â∫ïËØ•Â¶Ç‰ΩïÂÆûÁé∞,ËØ∑ÁúãÂ¶Ç‰∏ã‰ª£Á†Å:```cppÁ¶ªÊï£ÂåñÊ†∏ÂøÉ‰ª£Á†Å:struct node&#123; int v;//Êï∞ÂÄºÊú¨Ë∫´ int order;//ÂéüÂ∫èÂàóÁöÑÁöÑ‰∏ãÊ†á&#125;a[500005];int dis[500005]; //Áî®Êù•Â≠òÂÇ®ÂéüÊï∞Á¨¨i‰∏™Êï∞ÁöÑorder‰∏ãÊ†áÊòØ‰ªÄ‰πàsort(a,a+n,cmp); //Ê≥®ÊÑèÈúÄË¶ÅÁî±Â§ßÂà∞Â∞èÊéífor(int i = 1;i &lt;= n;++i) dis[a[i].order] = i; ÂéüÁêÜÂæàÁÆÄÂçïÂ∞±Âè™ÊòØÊåâa[i].vÁöÑÂ§ßÂ∞èÈáçÊéí,Âπ∂ÈáçÊñ∞Ëµã‰∫à‰ªñ‰ª¨Áõ∏ÂØπÂ§ßÂ∞è‰∏çÂèò,Êï¥‰ΩìÁº©Â∞èÁöÑÊñ∞ÁöÑa[i].v ÂÖ∑‰Ωì‰ª£Á†ÅÂ¶Ç‰∏ã:(HDU2689) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#include &lt;bits/stdc++.h&gt;#define mem(n) memset(n,0,sizeof(n))using namespace std;int n;struct node&#123; int val,order; bool operator &lt; (const node &amp; x) const&#123; return this-&gt;val &lt; x.val; &#125; &#125;a[1005];int dis[1005]; //Â∑ÆÂàÜÊï∞ÁªÑint tree[1005];inline int lowbit(int x)&#123; return x &amp; -x;&#125;void update(int x,int v)&#123; for(;x &lt;= n;x +=lowbit(x)) tree[x] += v;&#125;int query(int x)&#123; int res = 0; for(;x &gt; 0;x -= lowbit(x)) res += tree[x]; return res;&#125;int main()&#123; while(~scanf("%d",&amp;n))&#123; mem(a); mem(dis); mem(tree); for(int i = 1;i &lt;=n;++i)&#123; scanf("%d",&amp;a[i].val); a[i].order = i; &#125; sort(a + 1, a + 1 + n); for(int i = 1;i &lt;= n;++i)&#123; dis[a[i].order] = i; &#125; int cnt = 0; for(int i = 1;i &lt;= n;++i)&#123; update(dis[i],1); cnt += i - query(dis[i]); &#125; printf("%d\n",cnt); &#125; return 0;&#125;]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ICPC</tag>
        <tag>Êï∞ÊçÆÁªìÊûÑ</tag>
        <tag>ÊùøÂ≠ê</tag>
      </tags>
  </entry>
</search>
